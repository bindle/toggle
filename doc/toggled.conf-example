#
#   Toggle Provisioning System
#   Copyright (C) 2011 Bindle Binaries <syzdek@bindlebinaries.com>.
#
#   @BINDLE_BINARIES_BSD_LICENSE_START@
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are
#   met:
#
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in the
#        documentation and/or other materials provided with the distribution.
#      * Neither the name of Bindle Binaries nor the
#        names of its contributors may be used to endorse or promote products
#        derived from this software without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#   IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BINDLE BINARIES BE LIABLE FOR
#   ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#   LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#   OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.
#
#   @BINDLE_BINARIES_BSD_LICENSE_END@
#
#   doc/toggled.conf-example example configuration file for Toggle Daemon
#

# Common CLI arguments
#
#  -4                        enable IPv4 only
#  -6                        enable IPv6 only
#  -c file                   set config file
#  -f, --foreground          run in foreground
#  -g group                  set group of process
#  -h, --help                print this help and exit
#  -l ip                     set IP address network interface
#  -p port                   set tcp port of network connection
#  -P file                   set pid file
#  -u user                   set user of process
#  -v, --verbose             print verbose messages
#  -V, --version             print version number and exit

# Core daemon options
########################################

# deamon options
Foreground  NO
PidFile     "/var/run/toggled.pid"
ArgsFile    "/var/run/toggled.args"
User        "toggled"
Group       "daemon"

# logging options
DebugLevel      0
SyslogMask      "debug"
SyslogFacility  "daemon"

# timeout options (in seconds)
IdleTimeout 3600
AuthTimeout   60

# thread options
MaxThreads      20
MaxIdleThreads   5

# loads modules
ModulePath     "/usr/local/lib/toggled"
LoadModule     "mod_ldap.la"    # provides access to LDAP directories
LoadModule     "mod_regex.la"   # allows POSIX regex in provisioning rules
#LoadModule    "mod_pcre.la"    # allows PCRE regex in provisioning rules
LoadModule     "mod_math.la"    # allows math expressions in provisioning rules
LoadModule     "mod_odbc.la"    # provides access to ODBC data sources
LoadModule     "mod_exec.la"    # allows script execuction in provisioning rules
LoadModule     "mod_xml.la"     # provides XML access to XML interfaces
LoadModule     "mod_logic.la"   # provides structures such as if, switch, and while
LoadModule     "mod_crypto.la"  # provides access to hashing functions
LoadModule     "mod_tables.la"  # provides method of creating hash tables
LoadModule     "mod_string.la"  # provides acces to string functions

# makes module provisioning command available as a core provisioning command
#
# ExportCommand "<module command>" "<module>" "<alias>"
ExportCommand "exec" "mod_exec.la" "exec"


# System Context Definitions
########################################s

[Context "devel"]
ContextAccess "read-write"
ContextAllowCommand "su"

[Context "bindle"]
ContextAccess "read-write"

[Context "hobo"]
ContextAlias "bindle"


# Database Definitions
########################################

[Database "servicesLdap"]
Module              "mod_ldap.la"
AuthDB              "NO"
AccountDB           "YES"
LDAPURI             "ldap://ldap.bindlebinaries.com/o=internet??sub?(|(accountid=${ACCOUNTID})(username=${USERNAME}))"
LDAPBindDN          "cn=Directory Manager"
LDAPBindPW          "drowssap"
LDAPSASL            "none"
LDAPAttrAccount     "accountid"
LDAPAttrServices    "accountservices"
LDAPAttrUsername    "username"
LDAPAttrPassword    "userpassword"


[Database "admin"]
Module              "mod_ldap.la"
AuthDB              "YES"
AccountDB           "NO"
LDAPURI             "ldap://ldap.bindlebinaries.com/ou=People,o=toggle,o=slapdUsers??sub?(username=${USERNAME})"
LDAPBindDN          "cn=Directory Manager"
LDAPBindPW          "drowssap"
LDAPSASL            "none"
LDAPAttrUsername    "username"
LDAPAttrPassword    "userpassword"


[Database "mail-script"]
Driver              "mod_exec.la"
AllowAuth           "NO"
Script              "/usr/local/bin/update-maildir.sh"


# Common Queries
########################################

[Query "domain"]


# Service Definitions
########################################

# [Service "<servicename>"]
# Description              "<description>"
# RequiredArgument         "<argument>" "<argument regex>"
# Add <database> <arguments>
# Del <database> <arguments>

[Service "email"]
Description        "Enables e-mail access"
ServiceType        "account" # either "account" or "standalone"
ConflictsService   "mailinglist"


[ServiceAdd "email"]
RequiredArgument   'MAILQUOTA'   "^[[:digit:]]+$"
mail-script        exec          "-a" "${NEWUSERNAME}"
servicesLdap       ldif          "ldifs/mail-add.ldif"


[ServiceRemove "email"]
mail-script        exec    "-d" "${USERNAME}"
servicesLdap       ldif    "ldifs/mail-del.ldif"


[ServiceUpdate "email" "mailquota"]
RequiredArgument  'NEWMAILQUOTA'     "^[[:digit:]]+$"
servicesLdap      search     emailEntry "ldap:///o=internet?mailquota?(mail=${username})"
servicesLdap      ldapValue  emailEntry OLDMAILQUOTA mailquota
servicesLdap      ldif    "ldifs/mail-mod-quota.ldif"


[ServiceUpdate "email" "address"]
servicesLdap   ldif  "ldifs/mail-mod-address.ldif"
mail-script    "-a" "${NEWUSERNAME}"
mail-script    "-d" "${USERNAME}"


[ServiceQuery "email" "address"]
servicesLdap ldapsearch  emailEntry "ldap:///o=internet?mail?(mail=${username})"
servicesLdap ldapValue   emailEntry "ADDRESS" "mail"
returnValue  "ADDRESS"


# end of config